{
  "comments": [
    {
      "key": {
        "uuid": "4f673464_ff52487d",
        "filename": "policyhandler/pdp_api/DMaap/Subscriber.py",
        "patchSetId": 4
      },
      "lineNbr": 4,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "why the indentation flows from line to line ?",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 4,
        "endChar": 4
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20e6211f_4e0b4284",
        "filename": "policyhandler/pdp_api/DMaap/Subscriber.py",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "why this file has tabs whereas all the other files have spaces for indent ?",
      "range": {
        "startLine": 30,
        "startChar": 16,
        "endLine": 32,
        "endChar": 20
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dad48924_4513f587",
        "filename": "policyhandler/pdp_api/DMaap/Subscriber.py",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "the properties of the Subscriber object should be initialized in constructor",
      "range": {
        "startLine": 33,
        "startChar": 2,
        "endLine": 37,
        "endChar": 23
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01a22933_caa8af19",
        "filename": "policyhandler/pdp_api/DMaap/Subscriber.py",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "1. would it be useful to provide timeout and limit for the query to DMaaP MR ?\nhttps://wiki.onap.org/display/DW/DMaaP+API\n\n2. should the timeouts and other params come from config.json or discoverable config coming from consul-kv instead of being hardcoded ?\n\n3. why do you quote after joining the url with the path ?\n\n4. are you loosing all \u0027/\u0027s here ?\n   https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote_plus \n   quote_plus(\u0027/El Ni√±o/\u0027) yields \u0027%2FEl+Ni%C3%B1o%2F\u0027\n\u003e\u003e\u003e url \u003d urllib.parse.urljoin(\u0027http://my-hostname:1234\u0027, \u0027events/aviral/ph/5678\u0027)\n\u003e\u003e\u003e url\n\u0027http://my-hostname:1234/events/aviral/ph/5678\u0027\n\u003e\u003e\u003e url2 \u003d urllib.parse.quote_plus(url, safe\u003d\u0027\u0027)\n\u003e\u003e\u003e url2\n\u0027http%3A%2F%2Fmy-hostname%3A1234%2Fevents%2Faviral%2Fph%2F5678\u0027\n\n5. did you test this ?",
      "range": {
        "startLine": 48,
        "startChar": 2,
        "endLine": 50,
        "endChar": 43
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e606426_9d700855",
        "filename": "policyhandler/pdp_api/DMaap/Subscriber.py",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "why do you need a loop here ?",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 67
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "826da75b_89c7e86a",
        "filename": "policyhandler/pdp_api/DMaap/Subscriber.py",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "what is the purpose of this condition if(self.username\u003d\u003d\"\") ?\nusername is never set to any non-empty value",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 53,
        "endChar": 25
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "781c5994_d4d0248e",
        "filename": "policyhandler/pdp_api/DMaap/Subscriber.py",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "requests does not throw OSError..",
      "range": {
        "startLine": 63,
        "startChar": 3,
        "endLine": 65,
        "endChar": 22
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "429c22eb_f88bc6ab",
        "filename": "policyhandler/pdp_api/DMaap/Subscriber.py",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "the policy updates are not expected to come that often",
      "range": {
        "startLine": 69,
        "startChar": 2,
        "endLine": 71,
        "endChar": 27
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc230e7f_89f5edd3",
        "filename": "policyhandler/pdp_api/policy_listener.py",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "the properties of the Subscriber object should be initialized in constructor",
      "range": {
        "startLine": 146,
        "startChar": 12,
        "endLine": 153,
        "endChar": 60
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa39229b_76e0c131",
        "filename": "policyhandler/pdp_api/policy_listener.py",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "I do not understand why do you need the second while loop inside the top level one",
      "range": {
        "startLine": 160,
        "startChar": 12,
        "endLine": 160,
        "endChar": 43
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a317b41c_47a845a7",
        "filename": "policyhandler/pdp_api/policy_listener.py",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "requests does not through OSError..",
      "range": {
        "startLine": 171,
        "startChar": 23,
        "endLine": 171,
        "endChar": 31
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60e6792a_e2a2cd32",
        "filename": "policyhandler/pdp_api/policy_listener.py",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "why to have params as array ?",
      "range": {
        "startLine": 197,
        "startChar": 30,
        "endLine": 197,
        "endChar": 35
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0946f37a_2fa1a299",
        "filename": "policyhandler/pdp_api/policy_listener.py",
        "patchSetId": 4
      },
      "lineNbr": 229,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "message was already parsed",
      "range": {
        "startLine": 229,
        "startChar": 12,
        "endLine": 229,
        "endChar": 41
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a012f52a_36404864",
        "filename": "policyhandler/pdp_api/policy_listener.py",
        "patchSetId": 4
      },
      "lineNbr": 279,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "does Subscriber throw the ssl error that was directed here ?",
      "range": {
        "startLine": 279,
        "startChar": 43,
        "endLine": 279,
        "endChar": 77
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21ee2045_bdef85c3",
        "filename": "policyhandler/pdp_api/policy_matcher.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "PolicyMatcher.calc_coarse_patterns is not defined",
      "range": {
        "startLine": 69,
        "startChar": 32,
        "endLine": 69,
        "endChar": 66
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beee0ae0_17b6c0a0",
        "filename": "policyhandler/pdp_api/policy_rest.py",
        "patchSetId": 4
      },
      "lineNbr": 192,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "is that (type(policy) is str) ever the case ?\nshould that be logged instead of ignored ?",
      "range": {
        "startLine": 191,
        "startChar": 12,
        "endLine": 192,
        "endChar": 24
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "965f49ee_05571088",
        "filename": "policyhandler/pdp_api/policy_rest.py",
        "patchSetId": 4
      },
      "lineNbr": 209,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "there is a pythonic way to do the same\n for policy_id, policy_version  in policies_updated:\n...",
      "range": {
        "startLine": 207,
        "startChar": 8,
        "endLine": 209,
        "endChar": 35
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "599ba626_e9349788",
        "filename": "policyhandler/pdp_api/policy_rest.py",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "would this fail on numeric policy_version ?",
      "range": {
        "startLine": 210,
        "startChar": 36,
        "endLine": 210,
        "endChar": 60
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f653b6c0_d3561b68",
        "filename": "policyhandler/pdp_api/policy_rest.py",
        "patchSetId": 4
      },
      "lineNbr": 230,
      "author": {
        "id": 1949
      },
      "writtenOn": "2020-01-10T17:20:39Z",
      "side": 1,
      "message": "no need for continue",
      "range": {
        "startLine": 230,
        "startChar": 16,
        "endLine": 230,
        "endChar": 24
      },
      "revId": "535163784f9efbd05d7fc5e06e216516ac286627",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}